<<<<<<< HEAD
install.lib<-load.lib[!load.lib %in% installed.packages()]
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
sapply(load.lib,require,character=TRUE)
}
LoadPackage(c('ggplot2', 'dplyr'))
summary(expo_train$EXPO)
expo_train %>%
ggplot( aes(x=EXPO)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
summary(expo_train$EXPO)
expo_train %>%
ggplot( aes(x=EXPO)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Distribution de EXPO")
summary(expo_train$FORMULE)
expo_train %>%
ggplot( aes(x=FORMULE)) +
geom_histogram(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Distribution de FORMULE")
summary(expo_train$FORMULE)
expo_train %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE)) +
geom_bar() +
ggtitle("Distribution de FORMULE")
summary(expo_train$FORMULE)
expo_train %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle("Distribution de FORMULE")
summary(expo_train$FORMULE)
expo_train %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE')
summary(expo_train$FORMULE)
expo_train %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
labs(fill = 'FORMULE')
summary(expo_train$FORMULE)
expo_train %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_train %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(pct = sum(EXPO) /  expo_tot )
expo_train %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(nb=n(),  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot ) %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE))) +
geom_histogram() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot ) %>%
ggplot( aes(x=as.factor(FORMULE), fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot ) %>%
ggplot( aes(x=as.factor(FORMULE), y=EXPO, fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(FORMULE), y=EXPO, fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=FORMULE, y=EXPO, fill=as.factor(FORMULE))) +
geom_bar() +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(FORMULE), y=EXPO, fill=as.factor(FORMULE))) +
geom_bar(stat='identity') +
ggtitle('Distribution de FORMULE')+
xlab('FORMULE') +
ylab('nb') +
labs(fill = 'FORMULE')
table(expo_train$FORMULE)
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(FORMULE), y=EXPO, fill=as.factor(FORMULE))) +
geom_bar(stat='identity') +
ggtitle('Exposition par FORMULE')+
xlab('FORMULE') +
ylab('exposition') +
labs(fill = 'FORMULE')
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(FORMULE), y=EXPO, fill=as.factor(FORMULE))) +
geom_bar(stat='identity') +
ggtitle('Exposition par FORMULE')+
xlab('FORMULE') +
ylab('exposition') +
labs(fill = 'FORMULE')
variable = 'TYPE_RESIDENCE'
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(variable) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
variable = 'TYPE_RESIDENCE'
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(eval(variable)) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(FORMULE), y=EXPO, fill=as.factor(FORMULE))) +
geom_bar(stat='identity') +
ggtitle('Exposition par FORMULE')+
xlab('FORMULE') +
ylab('exposition') +
labs(fill = 'FORMULE')
variable = 'TYPE_RESIDENCE'
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(eval(variable)) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(eval(variable)) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(eval(variable)), y=EXPO, fill=as.factor(eval(variable)))) +
geom_bar(stat='identity') +
ggtitle(paste0('Exposition par ', variable))+
xlab('FORMULE') +
ylab('exposition') +
labs(fill = 'FORMULE')
variable = 'TYPE_RESIDENCE'
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(eval(variable, expo_train)) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(eval(variable)) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(eval(variable)), y=EXPO, fill=as.factor(eval(variable)))) +
geom_bar(stat='identity') +
ggtitle(paste0('Exposition par ', variable))+
xlab('FORMULE') +
ylab('exposition') +
labs(fill = 'FORMULE')
expo_tot <- sum(expo_train$EXPO)
expo_train %>%
group_by(TYPE_RESIDENCE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
expo_train %>%
group_by(TYPE_RESIDENCE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(TYPE_RESIDENCE), y=EXPO, fill=as.factor(TYPE_RESIDENCE))) +
geom_bar(stat='identity') +
ggtitle('Exposition par TYPE_RESIDENCE')+
xlab('TYPE_RESIDENCE') +
ylab('exposition') +
labs(fill = 'TYPE_RESIDENCE')
if (!require("here")){
install.packages("here")
library("here")
}
set_here
LoadPackage <- function (load.lib=c("")) {
install.lib<-load.lib[!load.lib %in% installed.packages()]
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
sapply(load.lib,require,character=TRUE)
}
LoadPackage(c('ggplot2', 'dplyr', 'formattable'))
expo_tot <- sum(expo_train$EXPO)
formattable(expo_train %>%
group_by(TYPE_RESIDENCE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
)
expo_train %>%
group_by(TYPE_RESIDENCE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(TYPE_RESIDENCE), y=EXPO, fill=as.factor(TYPE_RESIDENCE))) +
geom_bar(stat='identity') +
ggtitle('Exposition par TYPE_RESIDENCE')+
xlab('TYPE_RESIDENCE') +
ylab('exposition') +
labs(fill = 'TYPE_RESIDENCE')
expo_tot <- sum(expo_train$EXPO)
dt <-expo_train %>%
group_by(TYPE_RESIDENCE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
formattable(dt,
align=c('l','r','r')
)
expo_train %>%
group_by(TYPE_RESIDENCE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(TYPE_RESIDENCE), y=EXPO, fill=as.factor(TYPE_RESIDENCE))) +
geom_bar(stat='identity') +
ggtitle('Exposition par TYPE_RESIDENCE')+
xlab('TYPE_RESIDENCE') +
ylab('exposition') +
labs(fill = 'TYPE_RESIDENCE')
expo_tot <- sum(expo_train$EXPO)
dt <-expo_train %>%
group_by(TYPE_RESIDENCE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
formattable(dt,
align=c('l','r','r'),
list(
EXPO = accounting,
pct_EXPO = percent
)
)
expo_train %>%
group_by(TYPE_RESIDENCE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(TYPE_RESIDENCE), y=EXPO, fill=as.factor(TYPE_RESIDENCE))) +
geom_bar(stat='identity') +
ggtitle('Exposition par TYPE_RESIDENCE')+
xlab('TYPE_RESIDENCE') +
ylab('exposition') +
labs(fill = 'TYPE_RESIDENCE')
expo_tot <- sum(expo_train$EXPO)
dt <-expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
formattable(dt,
align=c('l','r','r'),
list(
EXPO = accounting,
pct_EXPO = percent
)
)
expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO)) %>%
ggplot( aes(x=as.factor(FORMULE), y=EXPO, fill=as.factor(FORMULE))) +
geom_bar(stat='identity') +
ggtitle('Exposition par FORMULE')+
xlab('FORMULE') +
ylab('exposition') +
labs(fill = 'FORMULE')
formattable(summary(expo_train$EXPO))
expo_train %>%
ggplot( aes(x=EXPO)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Distribution de EXPO")
expo_tot <- sum(expo_train$EXPO)
dt <-expo_train %>%
group_by(FORMULE) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
formattable(dt,
align=c('l','r','r'),
list(
EXPO = accounting,
pct_EXPO = percent
)
)
dt %>%
ggplot( aes(x=as.factor(FORMULE), y=EXPO, fill=as.factor(FORMULE))) +
geom_bar(stat='identity') +
ggtitle('Exposition par FORMULE')+
xlab('FORMULE') +
ylab('exposition') +
labs(fill = 'FORMULE')
expo_tot <- sum(expo_train$EXPO)
dt <-expo_train %>%
group_by(TYPE_HABITATION) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
formattable(dt,
align=c('l','r','r'),
list(
EXPO = accounting,
pct_EXPO = percent
)
)
dt %>%
ggplot( aes(x=as.factor(TYPE_HABITATION), y=EXPO, fill=as.factor(TYPE_HABITATION))) +
geom_bar(stat='identity') +
ggtitle('Exposition par TYPE_HABITATION')+
xlab('TYPE_HABITATION') +
ylab('exposition') +
labs(fill = 'TYPE_HABITATION')
expo_tot <- sum(expo_train$EXPO)
dt <-expo_train %>%
group_by(NB_PIECES) %>%
summarise(EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
formattable(dt,
align=c('l','r','r'),
list(
EXPO = accounting,
pct_EXPO = percent
)
)
dt %>%
ggplot( aes(x=as.factor(NB_PIECES), y=EXPO, fill=as.factor(NB_PIECES))) +
geom_bar(stat='identity') +
ggtitle('Exposition par NB_PIECES')+
xlab('NB_PIECES') +
ylab('exposition') +
labs(fill = 'NB_PIECES')
expo_tot <- sum(expo_train$EXPO)
dt <-expo_train %>%
group_by(FORMULE) %>%
summarise(nb = n(), EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
formattable(dt,
align=c('l','r','r'),
list(
EXPO = accounting,
pct_EXPO = percent
)
)
dt %>%
ggplot( aes(x=as.factor(FORMULE), y=EXPO, fill=as.factor(FORMULE))) +
geom_bar(stat='identity') +
ggtitle('Exposition par FORMULE')+
xlab('FORMULE') +
ylab('exposition') +
labs(fill = 'FORMULE')
dt <-expo_train %>%
group_by(NBSIN_TYPE2_AN3) %>%
summarise(nb_lignes = n(), EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
region <- gsub('[0-9]', '', dt$NBSIN_TYPE2_AN3)
dt <-expo_train %>%
group_by(ZONIER) %>%
summarise(nb_lignes = n(), EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
region <- gsub('[0-9]', '', dt$ZONIER)
region
expo_tot <- sum(expo_train$EXPO)
dt <-expo_train %>%
group_by(ZONIER) %>%
summarise(nb_lignes = n(), EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
region <- gsub('[0-9]', '', dt$ZONIER)
region
formattable(dt,
align=c('l','r','r', 'r'),
list(
nb_lignes= accounting,
EXPO = accounting,
pct_EXPO = percent
)
)
dt %>%
ggplot( aes(x=as.factor(ZONIER), y=EXPO, fill=as.factor(region))) +
geom_bar(stat='identity') +
ggtitle('Exposition par ZONIER')+
xlab('ZONIER') +
ylab('exposition') +
labs(fill = 'ZONIER')
expo_tot <- sum(expo_train$EXPO)
dt <-expo_train %>%
group_by(ZONIER) %>%
summarise(nb_lignes = n(), EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
region <- gsub('[0-9]', '', dt$ZONIER)
region
formattable(dt,
align=c('l','r','r', 'r'),
list(
nb_lignes= accounting,
EXPO = accounting,
pct_EXPO = percent
)
)
dt %>%
ggplot( aes(x=as.factor(ZONIER), y=EXPO, fill=as.factor(region))) +
geom_bar(stat='identity') +
ggtitle('Exposition par ZONIER')+
xlab('ZONIER') +
ylab('exposition') +
labs(fill = 'ZONIER') +
theme(axis.text.x = element_text(angle = 90))
expo_tot <- sum(expo_train$EXPO)
dt <-expo_train %>%
group_by(ZONIER) %>%
summarise(nb_lignes = n(), EXPO=sum(EXPO) ,  pct_EXPO = sum(EXPO) /  expo_tot )
region <- gsub('[0-9]', '', dt$ZONIER)
region
formattable(dt,
align=c('l','r','r', 'r'),
list(
nb_lignes= accounting,
EXPO = accounting,
pct_EXPO = percent
)
)
dt %>%
ggplot( aes(x=as.factor(ZONIER), y=EXPO, fill=as.factor(region))) +
geom_bar(stat='identity') +
ggtitle('Exposition par ZONIER')+
xlab('ZONIER') +
ylab('exposition') +
labs(fill = 'ZONIER') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
if (!require("here")){
install.packages("here")
library("here")
}
set_here
LoadPackage <- function (load.lib=c("")) {
install.lib<-load.lib[!load.lib %in% installed.packages()]
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
sapply(load.lib,require,character=TRUE)
}
LoadPackage(c('ggplot2', 'dplyr', 'formattable', 'DT'))
sin_train = read.table(file = here('data', 'raw', 'sin_train.csv'), header=T, sep=',', dec='.', encoding = 'UTF-8', stringsAsFactors = F)
sin_train = read.table(file = here('data', 'raw', 'sin_train.csv'), header=T, sep=';', dec=',', encoding = 'UTF-8', stringsAsFactors = F)
datatable(head(sin_train))
str(sin_train)
=======
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE,
fig.height = 5,
fig.width = 6
)
>>>>>>> e747fdfd468f63abdaab220c09639f407ffda601
